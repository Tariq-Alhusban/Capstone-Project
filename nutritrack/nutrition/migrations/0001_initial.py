# Generated by Django 5.2.7 on 2025-10-11 09:56

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('icon', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Food Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('calories', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('protein', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('carbs', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('fats', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('fiber', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('sodium', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_custom', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nutrition.foodcategory')),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('goal_calories', models.IntegerField(default=2000, validators=[django.core.validators.MinValueValidator(1000)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='MealEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner'), ('snack', 'Snack')], max_length=10)),
                ('quantity', models.FloatField(default=100, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('unit', models.CharField(choices=[('g', 'Grams'), ('ml', 'Milliliters'), ('cup', 'Cup'), ('tbsp', 'Tablespoon'), ('tsp', 'Teaspoon'), ('piece', 'Piece'), ('serving', 'Serving')], default='g', max_length=10)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.food')),
                ('meal_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.mealplan')),
            ],
            options={
                'ordering': ['meal_type', 'added_at'],
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1)])),
                ('unit', models.CharField(choices=[('g', 'Grams'), ('ml', 'Milliliters'), ('cup', 'Cup'), ('tbsp', 'Tablespoon'), ('tsp', 'Teaspoon'), ('piece', 'Piece'), ('serving', 'Serving')], max_length=10)),
                ('notes', models.CharField(blank=True, max_length=100)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.food')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ingredients', models.ManyToManyField(through='nutrition.RecipeIngredient', to='nutrition.food')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='recipeingredient',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutrition.recipetemplate'),
        ),
        migrations.AlterUniqueTogether(
            name='recipeingredient',
            unique_together={('recipe', 'food')},
        ),
    ]
